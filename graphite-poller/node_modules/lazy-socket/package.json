{
  "author": {
    "name": "Felix Geisend√∂rfer",
    "email": "felix@debuggable.com",
    "url": "http://debuggable.com/"
  },
  "name": "lazy-socket",
  "description": "A stateless socket that always lets you write().",
  "version": "0.0.4",
  "homepage": "https://github.com/felixge/node-lazy-socket",
  "repository": {
    "url": ""
  },
  "main": "./index",
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "devDependencies": {
    "sinon": "1.2.0",
    "utest": "0.0.3",
    "urun": "0.0.4"
  },
  "optionalDependencies": {},
  "readme": "# lazy-socket\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-lazy-socket.png)](http://travis-ci.org/felixge/node-lazy-socket)\n\nA stateless socket that always lets you write().\n\nIf there is an error, all previous `write()` callbacks will be honored. A new\nconnection will be established as soon as the next `write()` occurs. Writes\nwill not be retried.\n\n## Install\n\n```\nnpm install lazy-socket\n```\n\n## Usage\n\n```js\nvar LazySocket = require('lazy-socket');\nvar socket = LazySocket.createConnection(80, 'example.org');\nsocket.write('something', 'utf-8', function(err) {\n  // Even if example.org is down, this callback is guaranteed to fire, and\n  // there is no more error handling to do on your end.\n});\n```\n\n## License\n\nThis module is licensed under the MIT license.\n",
  "readmeFilename": "Readme.md",
  "_id": "lazy-socket@0.0.4",
  "_from": "lazy-socket@"
}
